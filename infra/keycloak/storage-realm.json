{
  "id" : "storage",
  "realm" : "storage",
  "displayName" : "Centralized Storage Service Realm",
  "displayNameHtml" : "Centralized Storage Service Realm",
  "notBefore" : 1624190842,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "d197b601-39a5-41b2-824a-34629f29cc6b",
      "name" : "storage-service-admin",
      "description" : "Storage Service administrator permission",
      "composite" : true,
      "composites" : {
        "client" : {
          "centralized-storage-service" : [ "admin" ],
          "storage-gateway" : [ "storagesvc_admin" ]
        }
      },
      "clientRole" : false,
      "containerId" : "storage",
      "attributes" : { }
    }, {
      "id" : "d5b05c30-373d-4ec8-9484-dff18e82a557",
      "name" : "tempfiledrop-user",
      "description" : "TempFileDrop user permission",
      "composite" : true,
      "composites" : {
        "client" : {
          "tempfiledrop-webapp" : [ "user" ],
          "centralized-storage-service" : [ "user" ],
          "tempfiledrop-webserver" : [ "user" ],
          "storage-gateway" : [ "storagesvc_user_tempfiledrop", "tempfiledrop_user" ]
        }
      },
      "clientRole" : false,
      "containerId" : "storage",
      "attributes" : { }
    }, {
      "id" : "7d4528ae-8409-4a53-a841-20dd88b286e8",
      "name" : "default-roles-storage",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "storage",
      "attributes" : { }
    }, {
      "id" : "93d62f2a-cf51-4084-98da-f09a7951d820",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "storage",
      "attributes" : { }
    }, {
      "id" : "2809f92c-6d1f-4867-9768-465efc458082",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "storage",
      "attributes" : { }
    }, {
      "id" : "0c2345c8-7026-45c7-ac72-eb673f143b84",
      "name" : "tempfiledrop-admin",
      "description" : "TempFileDrop administrator permission",
      "composite" : true,
      "composites" : {
        "client" : {
          "tempfiledrop-webapp" : [ "admin" ],
          "centralized-storage-service" : [ "user" ],
          "tempfiledrop-webserver" : [ "admin" ],
          "storage-gateway" : [ "storagesvc_user_tempfiledrop", "tempfiledrop_admin" ]
        }
      },
      "clientRole" : false,
      "containerId" : "storage",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "c5aa6416-7a5c-45cf-8001-5110bfd3fd7c",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "7f85cf97-b11a-45dd-9046-597a0f6c1aad",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "e2d06c1b-8820-46f6-b378-0d7308f5ffca",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "4c3bad2c-d6a5-4ad7-866f-e0e40f419ff9",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "1e7a27e9-1396-44be-aa17-abc835fe776e",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "83b05659-99f9-4cdb-9977-08e1ce2b8b0d",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "0472dc79-6d4d-4a43-8419-ff3b39e2b718",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "c97a6eb4-35d4-47a8-99b6-a56c94f6d281",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "1c9cee30-928c-493e-9640-3df75649d83b",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "27b3405b-659f-491d-8c60-1c5442633f82",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "874cf51d-847b-40f7-8ccc-9e6c2155b870",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "adb1c58f-1dff-420b-95f2-c3ec17eee53c",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "efdd42c4-fe46-419d-a025-dad79405990e",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "e301a82d-c791-4cc6-bab6-00f2b5b7ccce",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "a3d14737-0290-48db-b479-f1fb7c9719c2",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "67fbcf69-4437-42b8-91b3-5ee1bd19a71a",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-users", "create-client", "view-events", "view-authorization", "manage-realm", "view-clients", "view-users", "query-clients", "manage-clients", "query-realms", "view-realm", "manage-identity-providers", "query-groups", "manage-events", "view-identity-providers", "manage-authorization", "query-users", "impersonation" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "0b4409a4-2815-40dc-82fb-b86b2e34fe58",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "9d49e0a1-e499-451d-8728-62f7f998a39f",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      }, {
        "id" : "04609125-4403-49fd-ae57-f29e91c24fea",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
        "attributes" : { }
      } ],
      "tempfiledrop-webapp" : [ {
        "id" : "b4478195-eb80-4a2d-b1ba-9a2143fdb44b",
        "name" : "admin",
        "description" : "To authorize admin permissions",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "7ad507ba-baae-4130-871d-419db733b3b7",
        "attributes" : { }
      }, {
        "id" : "5e7204dd-c9d0-4fa5-8784-154037b4f69a",
        "name" : "user",
        "description" : "To authorize user permissions",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "7ad507ba-baae-4130-871d-419db733b3b7",
        "attributes" : { }
      } ],
      "centralized-storage-service" : [ {
        "id" : "d734adfd-8404-4653-9017-9262141e31fb",
        "name" : "admin",
        "description" : "To authorize admin permissions",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4ab9826-0a12-4ab6-acc0-211991bd6cab",
        "attributes" : { }
      }, {
        "id" : "3a1bc0fb-7fc0-43b5-baf0-c3da22e79f33",
        "name" : "user",
        "description" : "To authorize user permissions",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4ab9826-0a12-4ab6-acc0-211991bd6cab",
        "attributes" : { }
      }, {
        "id" : "dd32f4e8-7f28-471b-9f40-ba1b9f13e17d",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d4ab9826-0a12-4ab6-acc0-211991bd6cab",
        "attributes" : { }
      } ],
      "storage-console-web" : [ {
        "id" : "b10906d5-01ef-450f-b8d2-3bdc28c366ca",
        "name" : "admin",
        "description" : "Permissions for storage console admin",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "6a370641-cbcc-413a-8dfd-c5b1a7d68558",
        "attributes" : { }
      }, {
        "id" : "5d37c34f-f4d4-4b52-94a2-673324bce4b2",
        "name" : "user",
        "description" : "Permissions for storage console user",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "6a370641-cbcc-413a-8dfd-c5b1a7d68558",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "tempfiledrop-webserver" : [ {
        "id" : "7c5c7d7e-77ee-44c0-adfb-a4f13482392d",
        "name" : "user",
        "description" : "To authorize user permissions",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "78b472fe-8133-4b1f-9f30-68821443738f",
        "attributes" : { }
      }, {
        "id" : "c2267a15-8f59-4665-91cc-643dc7d6353a",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "78b472fe-8133-4b1f-9f30-68821443738f",
        "attributes" : { }
      }, {
        "id" : "5634d785-0f32-495c-88f9-fd27844bbd6f",
        "name" : "admin",
        "description" : "To authorize admin permissions",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "78b472fe-8133-4b1f-9f30-68821443738f",
        "attributes" : { }
      } ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4685c5a8-5e1d-4e97-8c07-59cc73d143a5",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee168c51-5dfd-4be2-93b2-9de96af7970e",
        "attributes" : { }
      } ],
      "storage-gateway" : [ {
        "id" : "3fa45e75-d7a7-4900-ae5e-83d44debbd1e",
        "name" : "storagesvc_admin",
        "description" : "Permissions for Storage Microservice admin",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "71de5ea5-e240-4d41-86c8-139e47614c8c",
        "attributes" : { }
      }, {
        "id" : "8427bc8b-4e64-4855-95cf-3b602b2f7cad",
        "name" : "storagesvc_user_tempfiledrop",
        "description" : "Permissions for TempFileDrop to use storage service",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "71de5ea5-e240-4d41-86c8-139e47614c8c",
        "attributes" : {
          "routingkeys" : [ "tempfiledrop" ],
          "subscribers" : [ "testing-user" ],
          "buckets" : [ "tempfiledrop" ]
        }
      }, {
        "id" : "90f9f02e-4805-4f32-845a-15c0602c4ed2",
        "name" : "tempfiledrop_user",
        "description" : "Permissions for TempFileDrop users",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "71de5ea5-e240-4d41-86c8-139e47614c8c",
        "attributes" : { }
      }, {
        "id" : "9bd5e52d-d6f2-42eb-8f24-6d4883377388",
        "name" : "tempfiledrop_admin",
        "description" : "Permissions for TempFileDrop admin",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "71de5ea5-e240-4d41-86c8-139e47614c8c",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "3ae69afb-0ade-47c4-bede-53aeb4b4e17c",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      }, {
        "id" : "6d1fc6a2-0f25-4d60-89c1-55accb542319",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      }, {
        "id" : "a39808b8-c0bd-4de5-927a-0f60ddac2552",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      }, {
        "id" : "189e088d-0a28-4747-8f46-7640df285832",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      }, {
        "id" : "36bea5e3-05d5-487c-a9cf-785c72abeb06",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      }, {
        "id" : "5472229e-dffe-4ff9-8d88-1edb41be7191",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      }, {
        "id" : "0403703b-434f-44d2-b91c-043d482e8916",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "7d4528ae-8409-4a53-a841-20dd88b286e8",
    "name" : "default-roles-storage",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "storage"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ {
      "name" : "builtin-default-policy",
      "builtin" : true,
      "enable" : false
    } ]
  },
  "users" : [ {
    "id" : "e27a6ab8-c94c-4aef-b74d-763b65697686",
    "createdTimestamp" : 1622987969787,
    "username" : "nobody",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Nobody",
    "credentials" : [ {
      "id" : "0316945d-d84f-4b63-b009-b1f2bb98aebc",
      "type" : "password",
      "createdDate" : 1622987980599,
      "secretData" : "{\"value\":\"cvnkoCQP6TQecdrRvqpiLPVe7a182LIezEzTVUKX+4oauPQCYctnHke8vj1C32whwQ53fzjGZMXZ27ZJuKJcJQ==\",\"salt\":\"v6NuRsttkb8VBjIb6wWwJA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-storage" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "f6603536-5e1c-4376-97c3-7bf181e8f1c8",
    "createdTimestamp" : 1622894609485,
    "username" : "service-account-centralized-storage-service",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "centralized-storage-service",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-storage" ],
    "clientRoles" : {
      "centralized-storage-service" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "535002b2-e5e4-41c2-a32c-9759da04d5da",
    "createdTimestamp" : 1623075894626,
    "username" : "storage-admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Samantha",
    "credentials" : [ {
      "id" : "850d6c07-d446-4985-bf17-e40d875cdac4",
      "type" : "password",
      "createdDate" : 1623075901167,
      "secretData" : "{\"value\":\"qEw+ssHENvB/iB7Nw7elwDMGzd+WmjTdw75eVx6xrsQM3D5NaPsd+YRaMMUwM3heL1v06gLXYTH+l/Im/vM09g==\",\"salt\":\"AuPXd8slDIR/OmJ9jOOfcw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "storage-service-admin", "default-roles-storage" ],
    "clientRoles" : {
      "storage-console-web" : [ "admin" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "fb4aa3f4-0f9c-4615-8801-862a9d9d2759",
    "createdTimestamp" : 1623075853546,
    "username" : "tempfiledrop-admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Hazel",
    "credentials" : [ {
      "id" : "3bfcf5ea-6216-4db0-878f-042751581591",
      "type" : "password",
      "createdDate" : 1623075864138,
      "secretData" : "{\"value\":\"Vev3D8KN9il0u7Xaca2z2MfnjNPNZQuKnGCOHVwjY4wuni8oxNcJZxS75P6oI0zgRgI4sXfKvgQgxYillbp/yw==\",\"salt\":\"o/dFBoS8N6fCPBMx8JsNyQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-storage", "tempfiledrop-admin" ],
    "clientRoles" : {
      "storage-console-web" : [ "user" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "ee1d241c-1a2a-4678-8b42-0055a1e96a02",
    "createdTimestamp" : 1622894808668,
    "username" : "user",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Adam",
    "lastName" : "Eve",
    "credentials" : [ {
      "id" : "b7b6ee0f-66b5-4f20-a6c8-ba1f624ffa64",
      "type" : "password",
      "createdDate" : 1622895762762,
      "secretData" : "{\"value\":\"1B7qbcOXHL6uE7A8BlKn1yDCGYXf4I4wE92nuLy8nRTWs1SbkAcXzS3o1Mvr3Bihy4Wp6GSdN9S1NL4OIKEjSA==\",\"salt\":\"9oRB6EfqLARXWVFC538HDA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "tempfiledrop-user", "default-roles-storage" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "3661a11f-3866-4100-8277-e4ef5015d663",
    "createdTimestamp" : 1624005346501,
    "username" : "user2",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Ado",
    "lastName" : "",
    "credentials" : [ {
      "id" : "3fe86594-d876-4154-84c0-146fbaadc417",
      "type" : "password",
      "createdDate" : 1624005358069,
      "secretData" : "{\"value\":\"yIX+G2Sphrs8/vxeUydZOgtvJWQAhjqOuvpVh1jdRnJh6hWwJprR+O9b5i73LgUvNo5N5mAjY01yHXz+p3Om/w==\",\"salt\":\"jwZfpJ7PBa/RqVINaplIfA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-storage" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "a7c763fc-6d5a-42b8-b00f-4bcd720dffe7",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/storage/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/storage/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b6adb919-5ccc-46c9-8489-e42d473da5f6",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/storage/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/storage/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "d5f98135-3ba3-465c-bc7e-79151233707c",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a2ff116e-36ef-4322-9893-69d79eb964a7",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ee168c51-5dfd-4be2-93b2-9de96af7970e",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d4ab9826-0a12-4ab6-acc0-211991bd6cab",
    "clientId" : "centralized-storage-service",
    "name" : "Centralized Storage Service",
    "description" : "Centralized Storage Service which is an abstraction layer over storage medium like MinIO or local file storage to store files",
    "rootUrl" : "http://localhost:8001",
    "adminUrl" : "http://localhost:8001",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8001/*" ],
    "webOrigins" : [ "http://localhost:8001" ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "58c5a9d9-67a3-424c-9753-df70bbaa1b93",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "545c6644-bfa4-46a3-8e50-7e9db0aa887d",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "672aa9d0-56a1-4896-ba1f-65be48094ba0",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ec5a1ae2-4645-4205-be9b-8d980c1d8181",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bc40363c-5e19-4530-a9a2-7c3c16fa23ad",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/storage/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/storage/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "18e9739e-ec01-44f2-ae0c-865d706238b7",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "6a370641-cbcc-413a-8dfd-c5b1a7d68558",
    "clientId" : "storage-console-web",
    "rootUrl" : "",
    "adminUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:3001/*" ],
    "webOrigins" : [ "http://localhost:3001" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : {
      "browser" : "2248a89b-ef72-4e72-a4eb-08e0ac88edaa"
    },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "storage-gateway-attr", "client-roles-storage-console-web", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "71de5ea5-e240-4d41-86c8-139e47614c8c",
    "clientId" : "storage-gateway",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "a7fb42ed-4b5c-48b8-b2e5-5174dddc56df",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "storage-gateway-attr", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7ad507ba-baae-4130-871d-419db733b3b7",
    "clientId" : "tempfiledrop-webapp",
    "rootUrl" : "http://localhost:3000",
    "adminUrl" : "http://localhost:3000",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:3000/*" ],
    "webOrigins" : [ "http://localhost:3000" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : {
      "browser" : "2248a89b-ef72-4e72-a4eb-08e0ac88edaa"
    },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "storage-gateway-attr", "client-roles-tempfiledrop-webapp", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "78b472fe-8133-4b1f-9f30-68821443738f",
    "clientId" : "tempfiledrop-webserver",
    "name" : "TempFileDrop Webserver",
    "description" : "Webserver which provides data for TempFileDrop.io",
    "rootUrl" : "http://localhost:7001",
    "adminUrl" : "http://localhost:7001",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:7001/*" ],
    "webOrigins" : [ "http://localhost:7001" ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "0a188520-d603-43e6-8f5a-810ae1de9799",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9ff0698f-0cb3-4e52-95f2-aad95c0e1699",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b87b88e8-a347-468a-87b6-0515949327b0",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "b226fc98-cb0d-4ee4-8bbc-49fce2056114",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "cf48df26-1094-4073-8ad9-c8271b4e0c55",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9d73477a-de60-48dc-af3d-fab582e9f75d",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "89ad7710-879f-46c4-939b-4db8428c714f",
    "name" : "storage-gateway-attr",
    "description" : "Custom Mapper to extract attributes from realm/client roles for admin",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "859fba59-20aa-4d57-b907-ba100e14dc69",
      "name" : "client-role-attributes",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-script-based-protocol-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "script" : "/**\n * Available variables: \n * user - the current user\n * realm - the current realm\n * token - the current token\n * userSession - the current userSession\n * keycloakSession - the current keycloakSession\n */\n\n\n//insert your code here...\nif ('storage-gateway' in token.resourceAccess) {\n    var buckets = [];\n    var routingkeys = [];\n    var subscribers = [];\n    var roles = token.resourceAccess['storage-gateway'].roles;\n    \n    // extract client role from realm composite role\n    for each (var realmRole in user.getRoleMappings()) {\n        if (realmRole.isComposite()) {\n            var composites = realmRole.getComposites();\n            for each (var composite in composites) {\n                if (roles.contains(composite.getName())) {\n                    var attrs = composite.getAttributes();\n                    // add bucket\n                    for each (var b in attrs['buckets']) {\n                        buckets.push(b);\n                    }\n                    // add routing keys\n                    for each (var k in attrs['routingkeys']) {\n                        routingkeys.push(k);\n                    }\n                    // add subscribers\n                    for each (var s in attrs['subscribers']) {\n                        subscribers.push(s);\n                    }\n                }\n            }\n        }\n    }\n    \n    token.setOtherClaims(\"storage_client_attr\", {\n        'buckets': Java.to(buckets, \"java.lang.String[]\"),\n        'routingkeys': Java.to(routingkeys, \"java.lang.String[]\"),\n        'subscribers': Java.to(subscribers, \"java.lang.String[]\")\n    });\n}\n\n// extract realm roles\n// var roles = Java.from(new java.util.ArrayList(token.realmAccess.roles));\n// for (var r in roles) {\n//     if (roles[r].endsWith('-admin')) {\n//         var attrs = keycloakSession.realms().getRealmRole(realm, roles[r]).attributes;\n//         results[roles[r]] = attrs;\n//     }\n// }",
        "multivalued" : "false",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "6d931978-d572-45b1-ba13-2a9506566963",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "a38615f7-5adf-43f5-b6e7-fc0c3575f2b7",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "92843d69-cb62-421f-a642-4c17f8c806ac",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "6eb88c10-3a5d-4808-973c-1e6327b7085b",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c3671ba6-0da6-4126-bfbe-648438479a7d",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "685991ec-2720-466e-9555-74bfa16a88bb",
    "name" : "client-roles-storage-console-web",
    "description" : "Mapper to extract client roles",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4de033e7-9e6a-4402-bd8e-33995d8b3834",
      "name" : "roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "roles",
        "jsonType.label" : "String",
        "usermodel.clientRoleMapping.clientId" : "storage-console-web"
      }
    } ]
  }, {
    "id" : "00adc11a-6aa2-4caa-864c-15d517a489cc",
    "name" : "client-roles-tempfiledrop-webapp",
    "description" : "Client Roles mapping for tempfiledrop-webapp",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "2b265943-aa1e-469b-8ff1-21a2bb57df92",
      "name" : "roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "roles",
        "jsonType.label" : "String",
        "usermodel.clientRoleMapping.clientId" : "tempfiledrop-webapp"
      }
    } ]
  }, {
    "id" : "b01628c0-7457-4aac-b9f7-fcf1264af26d",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3d272882-4b50-409a-823f-b95ddde464fe",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "d8bb3122-d858-4d4d-b451-91d9de755e10",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "c2ceb85b-0467-417c-8a21-c63d01dba383",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "5b6d7764-2562-4fd0-ae32-03e256f07046",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "b0a1e3ca-243e-475f-a01b-e1a2840dcf92",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "c9c48ab6-9b1d-495b-beb3-391f5233da6e",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "6c8acf33-b279-4c3a-82c4-483577671732",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "bcb7e40a-cdf2-4cc5-bf76-3bc029c382a2",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fc7aacd8-7540-4bc7-8680-4f348c0d0434",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "b1c43715-b6e5-4476-8a55-a67e20eb239c",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "bbebfd7d-aa00-400c-bd1e-862be9503a71",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e3ebbe20-86cf-478a-9702-414b38c1dee9",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "da846507-82e3-463d-b581-d6ddffd30507",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "753d1877-d705-4a55-b227-5865c982b258",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "24e57819-a597-44e9-a8ab-07a196637aa4",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6c14aa5e-ff87-43ed-9e70-c7e1415dcbc6",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "80c83eac-bcf9-4790-858d-1aad8b6656a0",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1e4067de-b881-42ce-a10b-34a2b61ef5fb",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1c045511-35a8-42c1-8875-39f10757f2fe",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8260f297-dc10-4ee8-b128-30d0f00f35b3",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b0a8fc20-f48a-4be2-bf3a-dc9f9881fe29",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3062ebef-b408-4760-9f54-971d5c62605e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "22c99b9f-95bf-4f56-bcaf-519901dd874f",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "339676bb-4a67-45cf-8e79-16bbede87a82",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "69418f0f-f51e-4fe7-8119-88786b0bae20",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "e77f2416-2063-40b9-a703-0199d47eb6e1",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "email", "web-origins", "role_list", "profile", "roles" ],
  "defaultOptionalClientScopes" : [ "address", "microprofile-jwt", "phone", "offline_access" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "443cfa9e-8449-4273-8b4b-3c8438cff6d1",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "b42a3b96-98f2-4ffe-8efc-0e739e004bd6",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "73b6af19-2280-4fbe-8c19-e148dcf14909",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "f8c97511-1b6b-44e3-8ddc-5540455084ea",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "2206ea24-6a9b-47d7-bdd5-edbd6f9fb4dc",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "43633086-2b4e-4c1f-806b-769b76860fec",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "e61d15a2-dc8c-464a-a307-54711c51329b",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "b062f185-ca70-4078-9959-8fcb0db5070c",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "330616ac-db3e-49cb-8482-72f5043539c1",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAjBbNUOPhBZVCssoky2C5S3WnmiR0a492J+KU7Z6yLrwgmTfyo1ZZjEDup3DvF/GLMaaDF3QJMwY33cefMV+UzFt+xy7Usc6cI2+6mo1ZZjgy0LP/+t5RXKRCPNW69wEfWSXfb6CGrv+bklhmut0M3SqnsV3JJentRl0geZ9WC8aOzIuyHXP67fSgkGzRW6yhFKHsIoN06A5hD6gzvb64pt31Eycs/rmnNgtAmyQmUls3imdjMrbs0fM1/xNQh7qLb/mR1UT+WErgxCn/VDrDTqgC5QLvNMdp1sdf5lpYBjd+Y90NQgyj2pTNSuJZuLXFBad5lfaVAP6w6oF3nmfmFwIDAQABAoIBAGkARlBVHbqzj9S20zFlhD1dKIzOujxMwYFPwdUBWAjTlZOCbemjtWb83GTAr1VBBNXoOuX/YU3PYVxoXZgCTmOGSNY+8cl8VWfyPOnO/K0zflMUN8/vhwhrTgKPKJ4vRzHowzrGFW1hxVfBzu5M9XFooVy+MSCr398Xulmu5i3YP77wonFYC7ZcAyiZOhSkNL6Kpql0uB1yhOa/A0qNjwXlASkm3TDG/7I//NCyWbUGoWNLQGOPM10cskE6DXKo3yiOp5rIqmtoxvQrchmWOuIS5IveXmqGee+FTNT27eybwya7kR2EYeGCp95V3gDkTuqXMM67zjDX8O0ehgGTOcECgYEAxwjfj7QkB7YWT6ZXiSHUSDla0LG/s3II+I3nU6SRsEU+RItgOJ1MwnUILaw7ZmpoJEuqQgMbEpq3Gmk1nRCq9pyQPW8AUbZO/fWO/G0MDZmsGFVUNPE0W+KWeIUeWrPfEgBkvHVrfTqTJJ45IMd6lb0DEXDALRjxvI94gm36hNECgYEAtC8HEXFbOOeMzNH2VSa0+Xtg7d7Vx4QUF6tvgKrX/lNyxXArO5eydFMc/Y/9sqQKrmG/FJSO1vOkIgROjDKkdv+DIuHyTih0ooX3IO/U9GO02Uv4QrUI7RcPXwDn7FWkBdrKAG6gd1IXb5Jqzrz1RJ1xg6mc8VypqntpasKqlmcCgYAOlizkODyHwCWEctlpeGw5WtK4Br7Y5NuZc7TnYWE3/OsiVOCZZZXRjogp6Lx1tgip2E3DBr0+MM6Ihfti5mzRJApCJldspaLGY++1ujwu5vtA0UgZlS/UKBgE/ySJWzNW+2ZmlWhqRhewkFP5fgUS4kZOSegbpf9ZZV5cmLjKcQKBgFmrecIFftdv7JNV/lhcHf52l0Np/UwAgBtTdvc6jqmED/8QFoPet7HKVwgda61GlAY6oOR2FiwFLm67Y/fDkDOkbzeh6HtbCMiFEPq0QG+rWyo084UHIT0Ul9K42bK04B8Fxje21mbrVLxyynK+ePU/wWk7tN4tNkagilLWNB0LAoGBAJWTkwjvk8avrewqMh8rkPAgrCdeQ7n3lg33glWeijvK7pJi65WEkcKz3QVxlAzJTRSdJdWiJCntq1Je2zQQUmFlimFg5+rWMumiM9zRa00OS2hO89OUd/aypejtI6dI5qKmDOMBtW93MTw5u1L8xqkTVhO2q4pfPKNU8ZIFZhrK" ],
        "certificate" : [ "MIICnTCCAYUCBgF53AhBwTANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdzdG9yYWdlMB4XDTIxMDYwNTExNTQ1OVoXDTMxMDYwNTExNTYzOVowEjEQMA4GA1UEAwwHc3RvcmFnZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIwWzVDj4QWVQrLKJMtguUt1p5okdGuPdifilO2esi68IJk38qNWWYxA7qdw7xfxizGmgxd0CTMGN93HnzFflMxbfscu1LHOnCNvupqNWWY4MtCz//reUVykQjzVuvcBH1kl32+ghq7/m5JYZrrdDN0qp7FdySXp7UZdIHmfVgvGjsyLsh1z+u30oJBs0VusoRSh7CKDdOgOYQ+oM72+uKbd9RMnLP65pzYLQJskJlJbN4pnYzK27NHzNf8TUIe6i2/5kdVE/lhK4MQp/1Q6w06oAuUC7zTHadbHX+ZaWAY3fmPdDUIMo9qUzUriWbi1xQWneZX2lQD+sOqBd55n5hcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEADOCwNquV829P2+nOzO6Jn1oypT0KEFug0wcYUPf2h1n47nFsZ+j96DkOmzI835LjV+aMQWCinyAuVPHOPSfvlPSiQdhwvdk7s8VYhBoDpUmfrxVg/zpcNMAxSUirao2HcvfecN95A0gKLk1YxIM3fkb/K3C3v2XMMK1sCKOEbr2UALJJ0zeXAkhj+fBMxWjom8FSQyoAEfkhhBA9OJ9+l9cHZwrdDlnhF9BeAcQFmCr9UinlnJkXPQM+s2r0oAc0k0oMOXeLCQwcVywJw43jmAaSLwJjaFUHNR/1WTda7TMaK+0eZwwsH3pGtFuUUtpk2n7BZMBhdwKfzVSgFSFB7g==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "fcf37017-a245-44cb-b5dc-f9869d2b0a46",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "4ce29ab8-52b7-420e-b1c6-c6f5b8e41008" ],
        "secret" : [ "kLkj-shcB77xdn_66Io5P3Jgs9gVPGMXHLJ-sgTEopGcpwuld8FMHddnaBIJDXAU9NgmTAO7hcZbXYRQunGvbw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "092ceef4-75bd-4023-b9dc-f9d0cfb06c80",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "22e18028-a6d0-456a-a740-cb40265de39f" ],
        "secret" : [ "yXtMVSbIDWwt3VYDJ-VwEw" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "e0d59fa9-99e9-4b96-9df4-838a24140890",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "b2f37c01-f165-4432-a8c4-f23b32056a80",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "46155cdf-b9b3-42bf-bd2a-8269c7e283aa",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "2248a89b-ef72-4e72-a4eb-08e0ac88edaa",
    "alias" : "Browser Role Access Control",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "Browser Role Access Control forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "91ca5921-1214-4608-9b62-f71f851ad1b7",
    "alias" : "Browser Role Access Control Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "3ddad8dc-2e56-4e5c-9201-8b3743cb5f84",
    "alias" : "Browser Role Access Control forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorConfig" : "hasClientRole",
      "authenticator" : "auth-script-based",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 21,
      "flowAlias" : "Browser Role Access Control Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "3128cca7-fc3c-4c4b-acac-cdfffaa5e689",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "28b020c9-6afc-4886-93f5-9636107dffb9",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "079f7f56-bbfa-4d3f-a1b9-d59ab24ff524",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "dcc9e288-3d22-4ee6-ba52-d00dbdb0d072",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "57d4f77a-2fea-4ee6-905d-60dddb63bbe0",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "96ede6b5-5872-419a-955b-b1436f821861",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "d098be2e-34bc-477c-845d-26063dede92d",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "984a399d-aec5-40d6-b944-e9188fdecda0",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "c142884a-205e-4b3c-ad71-36f05ba1dc34",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "0ec1be63-3b25-4aa3-949f-afb83ca7c010",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "2877f36c-dc4a-494a-83a9-922c436b50fb",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "dbe0e6f7-3c7d-43c4-a90a-70b219b0d1de",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "aff3f147-aa95-4a14-87fa-1b1f0f14e006",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "a2180a38-df04-433a-866a-7ceda7f4ee9d",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "57967ab9-486f-4d21-9fbb-4ed461073d6b",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "79f8270f-7644-49f9-b79f-6ed8a8b4cc46",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "36d56da2-f751-4382-a7a1-7d46bbaa7018",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "ea14c05d-41d9-40d5-8e1e-c420641766e6",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "3fb1d3ce-a1bd-4e7f-a83a-f34a313fdbe4",
    "alias" : "hasClientRole",
    "config" : {
      "scriptName" : "hasClientRole",
      "scriptCode" : "/*\n * Template for JavaScript based authenticator's.\n * See org.keycloak.authentication.authenticators.browser.ScriptBasedAuthenticatorFactory\n */\n\n// import enum for error lookup\nAuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\n\n/**\n * An example authenticate function.\n *\n * The following variables are available for convenience:\n * user - current user {@see org.keycloak.models.UserModel}\n * realm - current realm {@see org.keycloak.models.RealmModel}\n * session - current KeycloakSession {@see org.keycloak.models.KeycloakSession}\n * httpRequest - current HttpRequest {@see org.jboss.resteasy.spi.HttpRequest}\n * script - current script {@see org.keycloak.models.ScriptModel}\n * authenticationSession - current authentication session {@see org.keycloak.sessions.AuthenticationSessionModel}\n * LOG - current logger {@see org.jboss.logging.Logger}\n *\n * You one can extract current http request headers via:\n * httpRequest.getHttpHeaders().getHeaderString(\"Forwarded\")\n *\n * @param context {@see org.keycloak.authentication.AuthenticationFlowContext}\n */\nfunction authenticate(context) {\n\n    var username = user ? user.username : \"anonymous\";\n    LOG.info(script.name + \" trace auth for: \" + username);\n\n    var client = session.getContext().getClient();\n    var userRoleModel = client.getRole(\"user\");\n    var adminRoleModel = client.getRole(\"admin\");\n\n    if (!user.hasRole(userRoleModel) && !user.hasRole(adminRoleModel)) {\n        context.failure(AuthenticationFlowError.INVALID_USER);\n        return;\n    }\n\n    context.success();\n}",
      "scriptDescription" : "Checks if user have permission to access client"
    }
  }, {
    "id" : "9c7da520-0fe3-42f3-8aa7-145789c9b1f4",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "http://localhost:8080/auth",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "13.0.1",
  "userManagedAccessAllowed" : false
}