###############################################################################################
# Server Configuration
###############################################################################################

server.port: 8001

spring:
  profiles.active: dev
  application.name: storage-service

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    enabled: false

storagesvc:
  cors:                               # required for swagger-ui-react to call api through swagger
    enable: true
    origins: http://localhost:3000,http://localhost:3001,http://localhost:9090    # use comma to add more
  anonymous-upload:
    enable: true
    max-file-size: 104857600    # 1024 * 1024 * 100 (100MB)
  storage-mode: minio           # minio or file
  file-storage:
    upload-directory: uploads
  object-storage:
    minio-endpoint: http://localhost:9000
    minio-access-key: minio
    minio-access-secret: minio123

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.web.HttpLogging: DEBUG
    org.springframework.security: DEBUG

---

###############################################################################################
# Servlet Configuration for Multipart File
###############################################################################################

spring.servlet.multipart:
  enabled: false          # to use apache commons fileupload instead
  max-file-size: 5GB      # Max file size for each request
  max-request-size: 5GB   # Max request size for a multipart/form-data

---

###############################################################################################
# Mongo DB Configuration
###############################################################################################

spring.data.mongodb.uri: mongodb://storage_user:storage_pass@localhost:27017/storageDB?authSource=admin

---

###############################################################################################
# Rabbit MQ Configuration
###############################################################################################

spring:
  rabbitmq:
    addresses: localhost:5672
    username: storage_admin
    password: storage123
  cloud:
    function:
      definition: minioBucketEventsChannel
    stream:
      rabbit.bindings:
        minioBucketEventsChannel-in-0.consumer:
          binding-routing-key: bucketlogs
          bind-queue: false                             # Disable queue binding for access control (create manually)
          declare-exchange: false                       # Disable exchange creation for access control (create manually)
        storageSvcChannel-out-0.producer:
          routing-key-expression: headers.routingkey    # Get Routing key from streambridge header
          declare-exchange: false                       # Disable exchange creation for access control
      bindings:
        minioBucketEventsChannel-in-0:
          destination: minioBucketEvents                 # mapping cloud stream input channel to rabbitmq exchange
          group: storage
        storageSvcChannel-out-0.destination: storageSvcExchange       # mapping cloud stream output channel to rabbitmq exchange

---
